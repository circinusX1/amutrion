
#
# qmake configuration for the BeagleBoard and BeagleBoard xM boards
# http://beagleboard.org/

MAKEFILE_GENERATOR = UNIX
CONFIG += incremental
QMAKE_INCREMENTAL_STYLE = sublib

include(../../common/linux.conf)
include(../../common/gcc-base-unix.conf)
include(../../common/g++-unix.conf)

load(device_config)

QT_QPA_DEFAULT_PLATFORM = eglfs

ROOT_FS = '/home/marius/HOMEBOARDS/BBG_S2W/debfs'
CROSS_COMPILE = 'arm-linux-gnueabihf-'

# modifications to g++.conf
QMAKE_CC = $${CROSS_COMPILE}gcc
QMAKE_CXX = $${CROSS_COMPILE}g++
QMAKE_LINK = $${QMAKE_CXX}
QMAKE_LINK_SHLIB = $${QMAKE_CXX}

# modifications to linux.conf
QMAKE_AR = $${CROSS_COMPILE}ar cqs
QMAKE_OBJCOPY = $${CROSS_COMPILE}objcopy
QMAKE_NM = $${CROSS_COMPILE}nm -P
QMAKE_STRIP = $${CROSS_COMPILE}strip

COMPILER_FLAGS = -march=armv7-a -mtune=cortex-a8 -mfpu=neon -mthumb -fPIC
#modifications to gcc-base.conf
QMAKE_CFLAGS += $${COMPILER_FLAGS}
QMAKE_CXXFLAGS += $${COMPILER_FLAGS}
QMAKE_CXXFLAGS_RELEASE += -O3

# ROOT_FS
# mco-mco
# SET(LDFLAGS "-Wl,-rpath-link,$(ROOT_FS)/lib/arm-linux-gnueabihf")
# mco-mco


# /usr/lib/arm-linux-gnueabihf/
#./usr/lib/arm-linux-gnueabihf/libxcb.so.1
# ./lib/libxcb.so.1

QMAKE_LFLAGS += "-Wl,-rpath-link,$(ROOT_FS)/lib/arm-linux-gnueabihf,-rpath-link,$(ROOT_FS)/usr/lib/arm-linux-gnueabihf"
#QMAKE_LFLAGS += "-Wl,-rpath-link,-rpath-link,$(ROOT_FS)/usr/lib/arm-linux-gnueabihf,$(ROOT_FS)/lib/arm-linux-gnueabihf"
QMAKE_LFLAGS += -L$(ROOT_FS)/lib
QMAKE_LFLAGS += -L$(ROOT_FS)/lib/arm-linux-gnueabihf
QMAKE_LFLAGS += -L$(ROOT_FS)/usr/lib
QMAKE_LFLAGS += -L$(ROOT_FS)/usr/lib/arm-linux-gnueabihf

QMAKE_LIBS += -lrt -lpthread -ldl -fPIC

# Extra stuff (OpenGL, DirectFB, ...)
QMAKE_INCDIR_EGL = $(ROOT_FS)/usr/include
QMAKE_INCDIR_EGL += $(ROOT_FS)/usr/include/GL
QMAKE_INCDIR_EGL += $(ROOT_FS)/usr/include/GLES
QMAKE_INCDIR_EGL += $(ROOT_FS)/usr/include/GLES2
QMAKE_INCDIR_EGL += $(ROOT_FS)/usr/include/EGL
QMAKE_LIBDIR_EGL += $(ROOT_FS)/usr/lib/arm-linux-gnueabihf/
QMAKE_LIBDIR_EGL += $(ROOT_FS)/usr/lib
QMAKE_LIBDIR_EGL += $(ROOT_FS)/lib/


QMAKE_INCDIR_OPENGL_ES2 = $${QMAKE_INCDIR_EGL}
QMAKE_LIBDIR_OPENGL_ES2 = $${QMAKE_LIBDIR_EGL}
QMAKE_INCDIR_OPENVG = $${QMAKE_INCDIR_EGL}
QMAKE_LIBDIR_OPENVG = $${QMAKE_LIBDIR_EGL}

QMAKE_LIBS_EGL = -lEGL -lIMGegl -lsrv_um
QMAKE_LIBS_OPENGL_ES2 = -lGLESv2 $${QMAKE_LIBS_EGL}
QMAKE_LIBS_OPENVG =
# -lOpenVG $${QMAKE_LIBS_EGL}

#DISTRO_OPTS +=  soft-float
DISTRO_OPTS += hard-float

# No need for any special EGL device integration.
# Prioritize the default, compiled-in integration over any plugins.
EGLFS_DEVICE_INTEGRATION = none

include(../common/linux_arm_device_post.conf)

load(qt_config)

